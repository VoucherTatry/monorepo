datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  role  Role   @default(CUSTOMER)

  campaigns Campaign[]
  profile   Profile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  CUSTOMER
  ADMIN
  SUPER_ADMIN
}

model Profile {
  firstName   String
  lastName    String
  companyName String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Campaign {
  id        String    @id @default(cuid())
  title     String
  body      String
  price     Decimal?
  discount  Int
  startDate DateTime  @default(now())
  endDate   DateTime?
  location  Json

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  categories Category[]

  vouchers Voucher[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Voucher {
  id        String   @id @default(cuid())
  email     String?
  timestamp DateTime
  voucher   String

  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  campaignId String

  createdAt DateTime @default(now())
}

model Category {
  id   String @id @default(cuid())
  name String @unique

  campaigns Campaign[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id        String @id @default(cuid())
  title     String
  slug      String
  blocks    Json
  viewCount Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
